name: Tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  tests:

    strategy:
      matrix:
        php-version: [7.3, 7.4]

        os: [ubuntu-latest]

        dependencies: [locked]

        experimental: [false]

        include:
          - php-version: 7.4
            dependencies: highest
            os: ubuntu-latest
            experimental: false

          - php-version: 7.4
            os: windows-latest
            dependencies: locked
            experimental: false

          - php-version: 7.4
            os: macos-latest
            dependencies: locked
            experimental: false

          # - php-version: 8.0
          #   dependencies: highest
          #   os: ubuntu-latest
          #   experimental: true

    name: PHP ${{ matrix.php-version }} - L${{ matrix.laravel-version }} - ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache/files
          key: dependencies-os-${{ matrix.os }}-php-${{ matrix.php-version }}-laravel-${{ matrix.laravel-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: dependencies-os-${{ matrix.os }}-php-${{ matrix.php-version }}-laravel-${{ matrix.laravel-version }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, ctype, dom, fileinfo, intl, gd, json, mbstring, pdo, pdo_sqlite, openssl, sqlite, xml, zip
          coverage: none
          ini-values: "memory_limit=-1"

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install highest dependencies from composer.json
        if: matrix.dependencies == 'highest'
        run: composer config platform --unset && composer update ${{ env.COMPOSER_FLAGS }}

      - name: Install lowest dependencies from composer.json
        if: matrix.dependencies == 'lowest'
        run: composer install ${{ env.COMPOSER_FLAGS }} --prefer-lowest

      - name: Install dependencies from composer.lock
        if: matrix.dependencies == 'locked'
        run: composer install ${{ env.COMPOSER_FLAGS }}

      - name: Generate key
        run: php artisan key:generate

      - name: Install NPM
        run: npm install

      - name: Compile assets
        run: npm run production

      - name: Execute tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit
